SHELL := /bin/bash

ERROR_COLOR = \x1b[31;01m
OK_COLOR    = \x1b[32;01m
NO_COLOR    = \x1b[0m
ECHO 		= echo -e

LIBNAME             = rgtk

GLUE_LIBNAME 		= lib$(LIBNAME)_glue
GLUE_SRC			= gtk_glue/gtk_glue.c

TEST_SRC 		  	= test/main.rs

INC 				= $(shell pkg-config --cflags gtk+-3.0)
LIBS 				= $(shell pkg-config --libs gtk+-3.0)
RUSTC 				= rustc -g
OS 					= $(shell uname)

.DEFAULT: rgtk
.PHONY: rgtk
rgtk: glue rgtk-build | target/

.PHONY: rgtk-build
rgtk-build: src/*
					@$(ECHO) "$(OK_COLOR) Building rgtk.rlib $(NO_COLOR)"
					$(RUSTC) -L target/ src/$(LIBNAME).rs --out-dir target/

#make rulse for the glue library
.PHONY: glue
ifeq ($(OS), Darwin)
glue : target/$(GLUE_LIBNAME).dylib
else
glue : target/$(GLUE_LIBNAME).a
endif

target/$(GLUE_LIBNAME).dylib: $(GLUE_SRC) | target/ tmp/
					$(CC) $(INC) $(LIBS) -dynamiclib -o target/$(GLUE_LIBNAME).dylib $(SRC)

target/$(GLUE_LIBNAME).o: $(GLUE_SRC) | target/
					$(CC) -g -c $^ $(INC) -o $@ $(LIBS)

target/$(GLUE_LIBNAME).a: target/$(GLUE_LIBNAME).o | target/
					ar -rcs $@ $^

target/$(GLUE_LIBNAME).so:    target/$(GLUE_LIBNAME).o | target/
					$(CC) -shared -Wl,-soname,$(GLUE_LIBNAME).so -o $@ $^ -lc

.PHONY: test
test:				$(TEST_SRC) | test/bin/
					@$(ECHO) "$(OK_COLOR) Building test $(NO_COLOR)"
					$(RUSTC) -L target/ $(TEST_SRC) -o ./test/bin/test
					./test/bin/test

.PHONY: cairotest
cairotest:			test/cairo.rs | test/bin/
					@$(ECHO) "$(OK_COLOR) Building cairo test $(NO_COLOR)"
					$(RUSTC) -L target/ test/cairo.rs -o ./test/bin/cairo
					./test/bin/cairo

.PHONY: doc
doc:
					rustdoc -o doc/ src/rgtk.rs
					chmod -R 755 doc/

target/:
					mkdir -p $@
					@$(ECHO) "$(OK_COLOR) Created $@ foldder $(NO_COLOR)"

test/bin/:
					mkdir -p $@
					@$(ECHO) "$(OK_COLOR) Created $@ foldder $(NO_COLOR)"

.PHONY: full
full:				glue rgtk test

.PHONY: clean
clean:
					rm -rf tmp/ target/ doc/

